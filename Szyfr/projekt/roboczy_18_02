# !/usr/bin/python3
# -*- coding: utf-8 -*-
import random
from tkinter import *
from tkinter import messagebox as msb

okno=Tk()
okno.title("Sieć Feistela")#napis na ramce
def losuj_tekst():
    a=[]
    b=""
    for i in range(16):
        a.append(str(random.randint(0,1)))#utworzenie listy stringów
    b="".join(a)#zamiana listy na ciąg znaków bez spacji
    #text_Input.set(operator)
    pobierz_tekst_jawny.delete(0,END)
    pobierz_tekst_jawny.insert(END,(b))
def losuj_klucz():
    c = []
    d = ""
    for i in range(8):
        c.append(str(random.randint(0, 1)))  # utworzenie listy stringów
    d="".join(c)  # zamiana listy na ciąg znaków bez spacji
    pobierz_klucz.delete(0,END)
    pobierz_klucz.insert(END,(d))
def szyfruj():
    a = (pobierz_tekst_jawny.get())
    b = (pobierz_klucz.get())
    try:
        if len(a) == 16 and int(a, 2) <= (2 ** 16):
            if len(b) == 8 and int(b, 2) <= (2 ** 8):
                msb.showinfo("ok","Podano poprawny format\n wiadomość i klucza ")
                #szyfrogram = prog_szyfr.szyfrowanie(tekst_jawny, klucz, szyfrogram)
                lewa = int(a[:8], 2)
                prawa = int(a[8:], 2)
                klucz = int(b, 2)
                lewa_zaszyfr = (prawa)
                prawa_zaszyfr = lewa ^ (prawa ^ klucz)
                lewa_zaszyfr = bin(lewa_zaszyfr)
                prawa_zaszyfr = bin(prawa_zaszyfr)
                wynik = lewa_zaszyfr[2:] + prawa_zaszyfr[2:]
                wynik = "wiadomość po zaszyfrowaniu \n" + wynik
                pokaz_tekst_zaszyfrowany["text"] = wynik
            else:
                msb.showerror("Błąd","Nieodpowiednia ilość \nznakóœ klucza. Proszę poprawić")
                #okno z komunikatem o błędzie podanego klucza
        else:
            msb.showerror("Błąd","Nieodpowiednia ilość \nznaków wiadomości jawnej. \nProszę poprawić")
            # okno z komunikatem o błędzie podanej wiadomości
    except ValueError:
        msb.showerror("Błąd","Podajemy tylko 0 lub 1 nie litery.\nProszę poprawic")
def deszyfruj():
    a = (pobierz_szyfr.get())
    b = (pobierz_klucz2.get())
    try:
        if len(a) == 16 and int(a, 2) <= (2 ** 16):
            if len(b) == 8 and int(b, 2) <= (2 ** 8):
                msb.showinfo("ok","Podano poprawny format\n wiadomość i klucza ")
                #szyfrogram = prog_szyfr.szyfrowanie(tekst_jawny, klucz, szyfrogram)
                lewa = int(a[:8], 2)
                prawa = int(a[8:], 2)
                klucz = int(b, 2)
                prawa_odszyfr = (lewa)
                lewa_odszyfr = prawa ^ (lewa ^ klucz)
                lewa_odszyfr = bin(lewa_odszyfr)
                prawa_odszyfr = bin(prawa_odszyfr)
                lewa_odszyfr = lewa_odszyfr[2:]
                if len(lewa_odszyfr) < 8:  # mniej niż 8 znaków
                    lewa_odszyfr = "0" * (8 - len(lewa_odszyfr) + int(lewa_odszyfr))
                prawa_odszyfr = prawa_odszyfr[2:]
                if len(prawa_odszyfr) < 8:
                    prawa_odszyfr = "0" * (8 - len(prawa_odszyfr) + int(prawa_odszyfr))
                wynik = lewa_odszyfr + prawa_odszyfr
                wynik = "wiadomość po odszyfrowaniu \n" + wynik
                pokaz_tekst_odszyfrowany["text"] = wynik
            else:
                msb.showerror("Błąd","Nieodpowiednia ilość \nznaków klucza. Proszę poprawić")
                #okno z komunikatem o błędzie podanego klucza
        else:
            msb.showerror("Błąd","Nieodpowiednia ilość \nznaków wiadomości zaszyfrowanej. \nProszę poprawić")
            # okno z komunikatem o błędzie podanej wiadomości
    except ValueError:
        msb.showerror("Błąd","Podajemy tylko 0 lub 1 nie litery.\nProszę poprawic")
def koniec():
    if msb.askokcancel("Pytanie", "Czy na pewno kończymy pracę"):
        # okno dialogowe z przyciskami ok i cancel - zwraca prawdę, gdy ok jest wciśnięte
        msb.showinfo("Info","Koniec, żegnam")
        okno.destroy()#zamyka nasze okno
    else:
        msb.showinfo("Info","Ok, popracujmy dalej")#powrót do okna
def kasowanie():
    pobierz_tekst_jawny.delete(0, END)
    pobierz_klucz.delete(0,END)
    pobierz_szyfr.delete(0,END)
    pobierz_klucz2.delete(0,END)
    #pokaz_tekst_zaszyfrowany.delete(0,END)
    #pokaz_tekst_odszyfrowany.delete(0,END)

#definiowanie etykiet
tekst_jawny = Label(okno, text ="Wpisz wiadomość 16 bitów",bg="silver")
klucz = Label(okno, text = "Wpisz klucz,8 bitów",bg="silver")
pokaz_tekst_zaszyfrowany = Label(okno)
tekst_zaszyfrowany = Label(okno,text = "Wiadomość zaszyfrowana",bg="silver")
szyfr = Label(okno, text ="Wpisz wiadomość zaszyfrowaną",bg="silver")
klucz2 = Label(okno, text = "Wpisz klucz,8 bitów",bg="silver")
pokaz_tekst_odszyfrowany = Label(okno)
#definiowanie pola do wpisywania
pobierz_tekst_jawny = Entry(okno,width=16,bg="yellow")
pobierz_klucz = Entry(okno,width=8,bg="yellow")
pobierz_szyfr = Entry(okno,width=16,bg="yellow")
pobierz_klucz2 = Entry(okno,width=8,bg="yellow")
#aktywacja położenia etkiet i pól wpisywania tekstu
tekst_jawny.grid(row = 0)
klucz.grid(row = 1)
pobierz_tekst_jawny.grid(row = 0, column = 1)
pobierz_klucz.grid(row = 1,column = 1)
pokaz_tekst_zaszyfrowany.grid(row=4, column=1)
szyfr.grid(row = 6)
klucz2.grid(row = 7)
pobierz_szyfr.grid(row = 6, column = 1)
pobierz_klucz2.grid(row = 7, column = 1)
pokaz_tekst_odszyfrowany.grid(row=8, column=1)
#definiowanie przycisków nazwy,kolory, położenie
przycisk1 = Button(okno,text = "Szyfruj wiadomość",bg="green", command = szyfruj)
przycisk1.grid(row = 4, column = 0)
przycisk2 = Button(okno, text = "Deszyfruj widomość",bg="green", command = deszyfruj)
przycisk2.grid(row = 8, column = 0)
przycisk3 = Button(okno, text = "Losowanie wiadomości",bg="green", command = losuj_tekst)
przycisk3.grid(row = 2, column = 0)
przycisk4 = Button(okno, text = "Losowanie klucza",bg="green", command = losuj_klucz)
przycisk4.grid(row = 2, column = 1)
przycisk5 = Button(okno,text = "Zamknij program",bg="red", command = koniec)
przycisk5.grid(row = 9, column = 1)
przycisk6 = Button(okno,text = "Wyczyść pola",bg="green", command = kasowanie)#lambda: kasuj.delete(0,END))
przycisk6.grid(row = 9)
okno.mainloop()#włączamy pętle
